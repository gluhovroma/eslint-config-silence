module.exports = {
  parserOptions: {
    ecmaVersion: 2020,
    sourceType: "module",
  },

  env: {
    es6: true,
    node: true,
    browser: true,
  },

  plugins: ["sonarjs", "unicorn", "node", "promise", "import"],

  rules: {
    // Possible Errors
    "for-direction": "error",
    "getter-return": ["error", { allowImplicit: true }],
    "no-async-promise-executor": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-constant-condition": ["error", { checkLoops: false }],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-dupe-args": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": ["error", { allowEmptyCatch: true }],
    "no-empty-character-class": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-semi": "error",
    "no-func-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-misleading-character-class": "error",
    "no-obj-calls": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "warn",
    "no-unexpected-multiline": "error",
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "require-atomic-updates": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    "no-bitwise": "warn",

    // Best Practices
    "array-callback-return": ["error", { allowImplicit: true }],
    "no-case-declarations": "error",
    "no-else-return": "error",
    "no-empty-function": "error",
    "no-empty-pattern": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "error",
    "no-implied-eval": "error",
    "no-labels": ["error", { allowLoop: false, allowSwitch: false }],
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-proto": "error",
    "no-redeclare": "error",
    "no-return-assign": ["error", "always"],
    "no-return-await": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-throw-literal": "warn",
    "no-unused-expressions": ["error", { allowShortCircuit: true, allowTernary: true }],
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-concat": "error",
    "no-useless-escape": "error",
    "no-useless-return": "warn",
    "no-void": "error",
    "no-with": "error",
    "eqeqeq": ["error", "smart"],
    "radix": ["error", "as-needed"],
    "yoda": ["error", "never"],

    // Complexity
    "complexity": ["warn", 20],
    "sonarjs/cognitive-complexity": ["error", 15],
    "max-depth": ["warn", 4],
    "max-lines": ["warn", 300],
    "max-params": ["warn", 3],
    "sonarjs/max-switch-cases": ["error", 10],

    // Variables
    "init-declarations": ["warn", "always"],
    "no-delete-var": "error",
    "no-shadow": "warn",
    "no-shadow-restricted-names": "error",
    "no-undef": "error",
    "no-undef-init": "error",
    "no-unused-vars": ["error", { args: "after-used", ignoreRestSiblings: true }],
    "no-use-before-define": ["error", { functions: false, classes: false }],

    // Node.js and CommonJS
    "callback-return": "warn",
    "global-require": "warn",
    "handle-callback-err": ["warn", "^(err|error)$"],
    "no-buffer-constructor": "error",
    "no-mixed-requires": "error",
    "no-new-require": "error",
    "no-path-concat": "error",

    // Stylistic Issues
    "id-match": [
      "error",
      "[a-zA-Z_$][0-9a-zA-Z_$]*",
      { properties: true, onlyDeclarations: false },
    ],
    "no-lonely-if": "error",
    "no-multi-assign": "error",
    "no-new-object": "error",
    "no-unneeded-ternary": "error",

    // ECMAScript 6
    "constructor-super": "error",
    "no-class-assign": "error",
    "no-const-assign": "error",
    "no-dupe-class-members": "error",
    "no-duplicate-imports": ["error", { includeExports: true }],
    "no-new-symbol": "error",
    "no-this-before-super": "error",
    "no-useless-constructor": "error",
    "no-useless-rename": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-const": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "symbol-description": "warn",

    // Bug Detection
    "sonarjs/no-all-duplicated-branches": "error",
    "sonarjs/no-element-overwrite": "error",
    "sonarjs/no-extra-arguments": "error",
    "sonarjs/no-identical-conditions": "error",
    "sonarjs/no-identical-expressions": "error",
    "sonarjs/no-one-iteration-loop": "error",
    "sonarjs/no-use-of-empty-return-value": "error",

    // Code Smell Detection
    "sonarjs/no-collapsible-if": "error",
    "sonarjs/no-duplicate-string": "error",
    "sonarjs/no-duplicated-branches": "error",
    "sonarjs/no-identical-functions": "error",
    "sonarjs/no-inverted-boolean-check": "error",
    "sonarjs/no-redundant-boolean": "error",
    "sonarjs/no-small-switch": "error",
    "sonarjs/no-useless-catch": "error",
    "sonarjs/prefer-immediate-return": "error",
    "sonarjs/prefer-object-literal": "error",
    "sonarjs/prefer-single-boolean-return": "error",
    "sonarjs/prefer-while": "error",

    // Node
    "node/no-deprecated-api": "warn",
    "node/no-unpublished-bin": "error",

    // Promise
    "promise/param-names": "error",
    "promise/no-new-statics": "error",
    "promise/no-return-in-finally": "error",
    "promise/valid-params": "error",

    // Import
    "import/no-named-default": "error",
    "import/export": "error",
    "import/no-duplicates": "error",
    "import/first": "error",
    "import/no-webpack-loader-syntax": "error",
    "import/no-self-import": "error",
    "import/no-mutable-exports": "error",

    // Unicorn
    "unicorn/catch-error-name": [
      "error",
      {
        ignore: [/^err/],
      },
    ],
    "unicorn/consistent-function-scoping": "error",
    "unicorn/error-message": "error",
    "unicorn/escape-case": "error",
    "unicorn/expiring-todo-comments": ["error", { allowWarningComments: true }],
    "unicorn/new-for-builtins": "error",
    "unicorn/no-abusive-eslint-disable": "error",
    "unicorn/no-array-instanceof": "error",
    "unicorn/no-for-loop": "warn",
    "no-nested-ternary": "off",
    "unicorn/no-nested-ternary": "error",
    "unicorn/no-new-buffer": "error",
    "unicorn/no-unreadable-array-destructuring": "error",
    "unicorn/no-unsafe-regex": "warn",
    "unicorn/no-unused-properties": "warn",
    "unicorn/no-zero-fractions": "error",
    "unicorn/number-literal-case": "warn",
    "unicorn/prefer-event-key": "warn",
    "unicorn/prefer-exponentiation-operator": "warn",
    "unicorn/prefer-flat-map": "error",
    "unicorn/prefer-includes": "error",
    "unicorn/prefer-query-selector": "warn",
    "unicorn/prefer-reflect-apply": "warn",
    "unicorn/prefer-starts-ends-with": "error",
    "unicorn/prefer-string-slice": "warn",
  },
}
